swagger: '2.0'
info:
  title: NodeCMS
  description: API for Node Content Management System
  version: 1.0.0
host: localhost:3000
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /site:
    get:
      tags:
        - site
      description: |
        Returns site setup status and meta information.  
        If site setup is complete, a 200 status code is returned with site
        information.  
        If site has not been setup yet, a 404 status is returned.
      operationId: siteGet
      security: []
      responses:
        200:
          description: Site meta information
          schema:
            title: Site meta
            type: object
            properties:
              setupRequired:
                type: boolean
              siteTitle:
                type: string
        404:
          description: Site setup not complete
  /users:
    x-swagger-router-controller: Users
    get:
      tags: ['user']
      description: |
        Returns the list of users. Returns 200 if the full listing of users was
        returned. 206 is returned if more user accounts are available.
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
      responses:
        200:
          $ref: '#/responses/userList'
        206:
          $ref: '#/responses/userList'
    post:
      tags: ['user']
      description: Creates a new user account.
      parameters:
        - name: user
          in: body
          schema:
            $ref: '#/definitions/user'
          required: true
      responses:
        201:
          description: |
            User account created successfully. The new user account is returned
            in the response.
          schema:
            $ref: '#/definitions/user'
  /users/{id}:
    x-swagger-router-controller: Users
    put:
      tags: ['user']
      description: Update a user account.
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: user
          in: body
          schema:
            $ref: '#/definitions/user'
          required: true
      responses:
        200:
          description: User account was updated successfully.
          schema:
            $ref: '#/definitions/user'
definitions:
  user:
    title: User
    description: Represents a user account.
    type: object
    properties:
      _id:
        type: string
        minLength: 24
        maxLength: 24
        example: 507f1f77bcf86cd799439011
      username:
        type: string
        pattern: ^[a-zA-Z][a-zA-Z0-9]*$
        minLength: 6
        maxLength: 20
        example: username
      name:
        type: object
        properties:
          firstName:
            type: string
            minLength: 2
          lastName:
            type: string
            minLength: 2
      displayName:
        description: |
          Display name. Can be equal to the first name then last name seperated
          by a space, first name, last name, last name then first name
          seperated by a space, or the user's role.
        type: string
      email:
        type: string
        format: email
        example: user@example.com
responses:
  userList:
    description: |
      A listing of user accounts.
    headers:
      X-Total-Count:
        description: Total number of user accounts.
        type: integer
    schema:
      title: User accounts
      type: array
      items:
        $ref: '#/definitions/user'
parameters:
  page:
    description: Which page of results to return.
    name: page
    in: query
    type: integer
    default: 0
    minimum: 0
    maximum: 1000
  perPage:
    description: How many results per page to return.
    name: per_page
    in: query
    type: integer
    default: 20
    minimum: 1
    maximum: 100